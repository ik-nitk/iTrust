version: '3.8'

services:
  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
    ports:
      - "${MONGODB_PORT}:27017"
    volumes:
      - mongodata:/data/db
  db:
    image: postgres:14.1-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
  application:
    build:
      context: ${PWD}
      dockerfile: docker/web/Dockerfile.production
    environment:
      FLASK_ENV: ${FLASK_ENV}
      FLASK_CONFIG: ${FLASK_CONFIG}
      APPLICATION_DB: ${APPLICATION_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_HOSTNAME: "db"
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PORT: ${POSTGRES_PORT}
      REDIS_URL: ${REDIS_URL}
      MINIMUM_CASE_APPROVER: ${MINIMUM_CASE_APPROVER}
    command: gunicorn -w 4 -b 0.0.0.0 wsgi:app
    volumes:
      - ${PWD}:/opt/code
  fms:
    build:
      context: ${PWD}
      dockerfile: docker/web/Dockerfile.production
    environment:
      FLASK_ENV: ${FLASK_ENV}
      FLASK_CONFIG: ${FLASK_CONFIG}
      APPLICATION_DB: ${APPLICATION_DB}
      MONGODB_USER: ${MONGODB_USER}
      MONGODB_HOSTNAME: "mongo"
      MONGODB_PASSWORD: ${MONGODB_PASSWORD}
      MONGODB_PORT: ${MONGODB_PORT}
      UPLOAD_FOLDER: ${UPLOAD_FOLDER}
    command: gunicorn -w 4 -b 0.0.0.0 wsgi_fms:app
    volumes:
      - ${PWD}:/opt/code
      - uploads:/opt/uploads
  web:
    build:
      context: ${PWD}
      dockerfile: docker/web/Dockerfile.production
    environment:
      FLASK_ENV: ${FLASK_ENV}
      FLASK_CONFIG: ${FLASK_CONFIG}
      AUTH_ENABLED: ${AUTH_ENABLED}
    command: gunicorn -w 4 -b 0.0.0.0 wsgi_web:app
    volumes:
      - ${PWD}:/opt/code
  nginx:
    image: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:8080
  redis:
    command: redis-server --appendonly yes
    image: redis:6.2-alpine
    volumes:
      - redis-data:/data
  worker:
    build:
      context: ${PWD}
      dockerfile: docker/web/Dockerfile.production
    environment:
      REDIS_URL: ${REDIS_URL}
    depends_on:
      - redis
    command: rq worker --url redis://redis:6379/0 --with-scheduler
    volumes:
      - ${PWD}:/opt/code
volumes:
  pgdata:
  mongodata:
  uploads:
  redis-data:
